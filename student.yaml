openapi: 3.0.3
info:
  title: Onboarding - OpenAPI 3.0
  description: |-

  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: student
    description: Everything about students
paths:
  /student:
    put:
      tags:
        - student
      summary: Update an existing student
      description: Update an existing student using their ID
      operationId: updateStudent
      requestBody:
        description: Update an existing student in the database
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Student"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
    post:
      tags:
        - student
      summary: Add a new student
      description: Add a new student to the database
      operationId: addStudent
      requestBody:
        description: Create a new student in the database
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Student"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
  /student/{studentId}:
    get:
      tags:
        - student
      summary: Find student by ID
      description: Retrieve information about a single student
      operationId: getStudentById
      parameters:
        - name: studentId
          in: path
          description: ID of the student to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "404":
          description: Student not found
    delete:
      tags:
        - student
      summary: Delete a student
      description: Delete a student from the database
      operationId: deleteStudent
      parameters:
        - name: studentId
          in: path
          description: ID of the student to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
components:
  schemas:
    Student:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 12345
        name:
          type: string
          example: Arthur Morgan
        age:
          type: integer
          example: 36
        email:
          type: string
          example: arthur.morgan@example.com
      required:
        - name
        - age
        - email
